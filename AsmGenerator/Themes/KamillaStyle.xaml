<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

    <SolidColorBrush x:Key="TitleBarBackgroundBrush"              Color="#FF424242" />
    <SolidColorBrush x:Key="VS2012WindowBorderBrush"              Color="#FF222222" />
    <SolidColorBrush x:Key="VS2012WindowBorderBrushInactive"      Color="#FF555555" />
    <SolidColorBrush x:Key="VS2012WindowStatusForeground"         Color="#FF424242" />
    <SolidColorBrush x:Key="VS2012WindowStatusForegroundInactive" Color="#FF424242" />

    <Style x:Key="KamillaStyleControls">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.WindowBrushKey}"                     Color="#FF222222" />
            <SolidColorBrush x:Key="{x:Static SystemColors.WindowFrameBrushKey}"                Color="#FF444444" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ScrollBarBrushKey}"                  Color="Gray" />

            <SolidColorBrush x:Key="{x:Static SystemColors.ActiveBorderBrushKey}"               Color="#FF444444" />
            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveBorderBrushKey}"             Color="#FF212121" />

            <SolidColorBrush x:Key="{x:Static SystemColors.ActiveCaptionBrushKey}"              Color="LightGreen" />
            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveCaptionBrushKey}"            Color="DarkGreen" />

            <SolidColorBrush x:Key="{x:Static SystemColors.ControlDarkDarkBrushKey}"            Color="Black" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlDarkBrushKey}"                Color="DarkGreen" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}"                    Color="#FF006E00" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlLightBrushKey}"               Color="#FF009600" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlLightLightBrushKey}"          Color="#FF00AA00" />

            <SolidColorBrush x:Key="{x:Static SystemColors.AppWorkspaceBrushKey}"               Color="DarkGreen" />
            <SolidColorBrush x:Key="{x:Static SystemColors.MenuBrushKey}"                       Color="DarkGreen" />
            <SolidColorBrush x:Key="{x:Static SystemColors.MenuBarBrushKey}"                    Color="DarkGreen" />
            <SolidColorBrush x:Key="{x:Static SystemColors.MenuHighlightBrushKey}"              Color="LightGreen" />
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"                  Color="#FF424242" />
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"              Color="#FF17AD1A" />
            <SolidColorBrush x:Key="{x:Static SystemColors.HotTrackBrush}"                      Color="#FF17AD1A" />

            <SolidColorBrush x:Key="{x:Static SystemColors.WindowTextBrushKey}"                 Color="#FF17AD1A" />
            <SolidColorBrush x:Key="{x:Static SystemColors.MenuTextBrushKey}"                   Color="#FF17AD1A" />
            <SolidColorBrush x:Key="{x:Static SystemColors.InfoTextBrushKey}"                   Color="#FF17AD1A" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}"                Color="#FF17AD1A" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ActiveCaptionTextBrushKey}"          Color="#FF17AD1A" />

            <SolidColorBrush x:Key="TitleBarBackgroundBrush"              Color="#FF424242" />
            <SolidColorBrush x:Key="VS2012WindowBorderBrush"              Color="#FF222222" />
            <SolidColorBrush x:Key="VS2012WindowBorderBrushInactive"      Color="#FF555555" />
            <SolidColorBrush x:Key="VS2012WindowStatusForeground"         Color="#FF424242" />
            <SolidColorBrush x:Key="VS2012WindowStatusForegroundInactive" Color="#FF424242" />

            <LinearGradientBrush x:Key="BorderBrush" StartPoint="0,0" EndPoint="0,1">
                <LinearGradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Offset="0" Color="#FF555555" />
                        <GradientStop Offset="1" Color="#FF444444" />
                    </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
                <LinearGradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Offset="0.0" Color="#FF585858" />
                        <GradientStop Offset="0.5" Color="#FF505050" />
                        <GradientStop Offset="1.0" Color="#FF484848" />
                    </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="0,1">
                <LinearGradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Offset="0.0" Color="#FF404040" />
                        <GradientStop Offset="0.5" Color="#FF383838" />
                        <GradientStop Offset="1.0" Color="#FF303030" />
                    </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="GreenBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
                <LinearGradientBrush.GradientStops>
                    <GradientStop Offset="0.0" Color="#FF17AD1A" />
                    <GradientStop Offset="0.5" Color="#FF14A017" />
                    <GradientStop Offset="1.0" Color="#FF118214" />
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="HighlightBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
                <LinearGradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Offset="0.0" Color="#FF3F3F3F" />
                        <GradientStop Offset="0.67" Color="#FF424242" />
                        <GradientStop Offset="1.0" Color="#FF454545" />
                    </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <Style x:Key="KamillaStyle">
                <Setter Property="Control.Background" Value="{StaticResource {x:Static SystemColors.WindowBrushKey}}" />
                <Setter Property="Control.Foreground" Value="{StaticResource {x:Static SystemColors.WindowTextBrushKey}}" />
                <Setter Property="Control.BorderBrush" Value="{StaticResource BorderBrush}" />
            </Style>

            <Style BasedOn="{StaticResource KamillaStyle}" TargetType="{x:Type TextBlock}" />
            <Style BasedOn="{StaticResource KamillaStyle}" TargetType="{x:Type Grid}" />

            <Style BasedOn="{StaticResource KamillaStyle}" TargetType="{x:Type TextBox}">
                <Setter Property="SelectionBrush" Value="#FFAAAAAA" />
                <Setter Property="CaretBrush" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Style.Triggers>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style BasedOn="{StaticResource KamillaStyle}" TargetType="{x:Type RichTextBox}">
                <Setter Property="SelectionBrush" Value="#FFAAAAAA" />
                <Setter Property="CaretBrush" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}" />
            </Style>

            <Style TargetType="{x:Type ResizeGrip}">
                <Setter Property="WindowChrome.ResizeGripDirection" Value="BottomRight" />
            </Style>

            <Style BasedOn="{StaticResource KamillaStyle}" TargetType="{x:Type ProgressBar}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ProgressBar}">
                            <Grid MinWidth="200" MinHeight="14">
                                <Border Name="PART_Track"
                                Background="{StaticResource BackgroundBrush}"
                                BorderBrush="{StaticResource BorderBrush}"
                                BorderThickness="1"
                                CornerRadius="2" />
                                <Border Name="PART_Indicator"
                                HorizontalAlignment="Left"
                                Background="{StaticResource GreenBackgroundBrush}"
                                BorderBrush="{StaticResource BorderBrush}"
                                BorderThickness="1"
                                CornerRadius="2" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="MenuBaseStyle" TargetType="MenuBase">
                <Setter Property="Background" Value="#FF282828" />
                <Setter Property="BorderBrush" Value="#FF404040" />
                <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}" />
            </Style>

            <Style BasedOn="{StaticResource MenuBaseStyle}" TargetType="Menu">
                <Setter Property="Background" Value="{x:Null}" />
            </Style>

            <Style BasedOn="{StaticResource MenuBaseStyle}" TargetType="ContextMenu">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                <Setter Property="HasDropShadow" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ContextMenu">
                            <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasDropShadow" Value="true">
                                    <Setter TargetName="Border" Property="CornerRadius" Value="4" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  ToolTip  -->
            <Style TargetType="{x:Type ToolTip}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="HasDropShadow"         Value="True" />
                <Setter Property="Foreground"            Value="#FF17AD1A" />
                <Setter Property="FontStyle"             Value="Normal" />
                <!--<Setter Property="FontFamily"            Value="../resources/#MORPHEUS" />-->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToolTip}">
                            <Border Name="border_tooltip" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                            Background="#FF444444" BorderBrush="#FF222222" BorderThickness="2">
                                <ContentPresenter Margin="5" HorizontalAlignment="Left"  VerticalAlignment="Top" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasDropShadow" Value="True">
                                    <Setter TargetName="border_tooltip" Property="CornerRadius" Value="5" />
                                    <Setter TargetName="border_tooltip" Property="SnapsToDevicePixels" Value="True" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="border_tooltip" Property="Background" Value="#FF444444" />
                                    <Setter Property="Opacity" Value="0.82" />
                                    <Setter Property="Foreground" Value="#888" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="MenuItem">
                <Style.Resources>
                    <LinearGradientBrush x:Key="HighlightedBackgroundBrush" EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Offset="0.00" Color="#FF3F3F3F" />
                            <GradientStop Offset="0.67" Color="#FF424242" />
                            <GradientStop Offset="1.00" Color="#FF454545" />
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Style.Resources>

                <Setter Property="Foreground"  Value="{Binding Path=Foreground,  RelativeSource={RelativeSource AncestorType={x:Type MenuBase}}}" />
                <Setter Property="Background"  Value="{Binding Path=Background,  RelativeSource={RelativeSource AncestorType={x:Type MenuBase}}}" />
                <Setter Property="BorderBrush" Value="{Binding Path=BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type MenuBase}}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" MinWidth="17" x:Name="Col0" />
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup" />
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                                        <ColumnDefinition x:Name="Col3" Width="14" />
                                    </Grid.ColumnDefinitions>

                                    <!--  ContentPresenter to show an Icon if needed  -->
                                    <ContentPresenter x:Name="Icon" Grid.Column="0" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Icon" />

                                    <!--  Glyph is a checkmark if needed for a checkable menu  -->
                                    <Grid x:Name="GlyphPanel" Grid.Column="0" Margin="4,0,6,0" VerticalAlignment="Center" Visibility="Hidden">
                                        <Path x:Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight"
                                        Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" />
                                    </Grid>

                                    <!--  Content for the menu text etc  -->
                                    <ContentPresenter x:Name="HeaderHost" Grid.Column="1" Margin="{TemplateBinding Padding}" ContentSource="Header" RecognizesAccessKey="True" />

                                    <!--  Content for the menu IGT  -->
                                    <ContentPresenter x:Name="IGTHost" Grid.Column="2" Margin="8,1,8,1" VerticalAlignment="Center" ContentSource="InputGestureText" />

                                    <!--  Arrow drawn path which points to the next level of the menu  -->
                                    <Grid x:Name="ArrowPanel" Grid.Column="3" Margin="4,0,6,0" VerticalAlignment="Center">
                                        <Path x:Name="ArrowPanelPath" HorizontalAlignment="Right" VerticalAlignment="Center" Data="M0,0 L0,8 L4,4 z" Fill="{TemplateBinding Foreground}" />
                                    </Grid>

                                    <!--  The Popup is the body of the menu which expands down or across depending on the level of the item  -->
                                    <Popup x:Name="SubMenuPopup" Focusable="false" Placement="Right"
                                    IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                    PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                        <Border x:Name="SubMenuBorder" Background="#FF282828" BorderBrush="#FF404040" BorderThickness="2" CornerRadius="4">
                                            <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                                                <!--  StackPanel holds children of the menu. This is set by IsItemsHost=True  -->
                                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                            </Grid>
                                        </Border>
                                    </Popup>
                                </Grid>
                            </Border>

                            <!--  These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role  -->
                            <ControlTemplate.Triggers>
                                <!--  Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down  -->
                                <Trigger Property="Role" Value="TopLevelHeader">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0.0" Color="#FF404040" />
                                                    <GradientStop Offset="0.5" Color="#FF383838" />
                                                    <GradientStop Offset="1.0" Color="#FF303030" />
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>

                                    <Setter Property="BorderThickness" Value="1" />
                                    <Setter Property="BorderBrush"     Value="{StaticResource {x:Static SystemColors.InactiveBorderBrushKey}}" />
                                    <Setter Property="Padding"         Value="6,1,6,1" />

                                    <Setter TargetName="SubMenuPopup"   Property="Placement"  Value="Bottom" />
                                    <Setter TargetName="Col0"           Property="MinWidth"   Value="0" />
                                    <Setter TargetName="Col3"           Property="Width"      Value="Auto" />
                                    <Setter TargetName="Icon"           Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="GlyphPanel"     Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="IGTHost"        Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="ArrowPanel"     Property="Visibility" Value="Collapsed" />
                                </Trigger>

                                <!--  Role = TopLevelItem :  this is a child menu item from the top level without any child items  -->
                                <Trigger Property="Role" Value="TopLevelItem">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0.0" Color="#FF404040" />
                                                    <GradientStop Offset="0.5" Color="#FF383838" />
                                                    <GradientStop Offset="1.0" Color="#FF303030" />
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="BorderThickness"  Value="1" />
                                    <Setter Property="BorderBrush"      Value="{StaticResource {x:Static SystemColors.InactiveBorderBrushKey}}" />
                                    <Setter Property="Padding"          Value="6,1,6,1" />

                                    <Setter TargetName="Col0"       Property="MinWidth"     Value="0" />
                                    <Setter TargetName="Col3"       Property="Width"        Value="Auto" />
                                    <Setter TargetName="Icon"       Property="Visibility"   Value="Collapsed" />
                                    <Setter TargetName="GlyphPanel" Property="Visibility"   Value="Collapsed" />
                                    <Setter TargetName="IGTHost"    Property="Visibility"   Value="Collapsed" />
                                    <Setter TargetName="ArrowPanel" Property="Visibility"   Value="Collapsed" />
                                </Trigger>

                                <!--  Role = SubMenuHeader : this is a child menu item which does not have children  -->
                                <Trigger Property="Role" Value="SubmenuHeader">
                                    <Setter Property="DockPanel.Dock"   Value="Top" />
                                    <Setter Property="Padding"          Value="0,2,0,2" />
                                </Trigger>

                                <!--  Role = SubMenuItem : this is a child menu item which has children  -->
                                <Trigger Property="Role" Value="SubmenuItem">
                                    <Setter Property="DockPanel.Dock"   Value="Top" />
                                    <Setter Property="Padding"          Value="0,2,0,2" />

                                    <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                    <Setter TargetName="SubMenuPopup" Property="PopupAnimation" Value="None" />
                                </Trigger>

                                <!--  If no Icon is present the we collapse the Icon Content  -->
                                <Trigger Property="Icon" Value="{x:Null}">
                                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                                </Trigger>

                                <!--  The GlyphPanel contains the CheckMark  -->
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="Icon"       Property="Visibility" Value="Collapsed" />
                                </Trigger>

                                <!--  Using the system colors for the Menu Highlight and IsEnabled  -->
                                <Trigger Property="IsHighlighted" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource HighlightedBackgroundBrush}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource HighlightedBackgroundBrush}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="#FF727272" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
                <Setter Property="BorderBrush" Value="{Binding Path=BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type MenuBase}}}" />
                <Setter Property="Height" Value="2" />
                <!--  <Setter Property="Margin" Value="0,4,0,4" />  -->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Separator">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  SCROLLBAR STUFF  -->

            <SolidColorBrush x:Key="ScrollBarPressedBackgroundBrush" Color="#FF454545" />
            <LinearGradientBrush x:Key="ScrollBarBorderBrush" StartPoint="0,0" EndPoint="0,1">
                <LinearGradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Offset="0" Color="#FF555555" />
                        <GradientStop Offset="1" Color="#FF444444" />
                    </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="ScrollBarBorderHBrush" StartPoint="0,0" EndPoint="1,0">
                <LinearGradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Offset="0" Color="#FF555555" />
                        <GradientStop Offset="1" Color="#FF444444" />
                    </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ScrollBarBackgroundBrush" Color="#FF282828" />
            <SolidColorBrush x:Key="ScrollBarThumbBorderBrush" Color="#FF454545" />
            <LinearGradientBrush x:Key="ScrollBarThumbBackgroundBrush" StartPoint="0,0" EndPoint="1,0">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Offset="0.0" Color="#FF454545" />
                        <GradientStop Offset="1.0" Color="#FF333333" />
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="ScrollBarThumbBackgroundHBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Offset="0.0" Color="#FF454545" />
                        <GradientStop Offset="1.0" Color="#FF333333" />
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ScrollBarGlyphBrush" Color="#FF17AD1A" />

            <!--  SrollViewer ScrollBar Repeat Buttons (at each end)  -->
            <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Name="Border"
                            Margin="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="1">
                                <Path HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                                Fill="{StaticResource ScrollBarGlyphBrush}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource ScrollBarPressedBackgroundBrush}" />
                                </Trigger>
                                <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>-->
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--
        SrollViewer ScrollBar Repeat Buttons (The part in the middle,
        not the thumb the long area between the buttons )
    -->
            <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="false" />
                <!--  <Setter Property="Focusable" Value="false" />  -->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Background="Transparent" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--
        ScrollViewer ScrollBar Thumb, that part that can be dragged
        up/down or left/right Buttons
    -->
            <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="BorderBrush" Value="{StaticResource ScrollBarThumbBorderBrush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="1" />
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDragging" Value="true">
                                    <Setter Property="Background" Value="{StaticResource ScrollBarPressedBackgroundBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition MaxHeight="18" />
                        <RowDefinition Height="0.00001*" />
                        <RowDefinition MaxHeight="18" />
                    </Grid.RowDefinitions>
                    <Border Grid.RowSpan="3"
                    Background="{StaticResource ScrollBarBackgroundBrush}"
                    BorderBrush="{StaticResource ScrollBarBorderHBrush}"
                    BorderThickness="1"
                    CornerRadius="1" />
                    <RepeatButton Name="PART_RepBtn1"
                            Grid.Row="0"
                            Height="18"
                            Command="ScrollBar.LineUpCommand"
                            Content="M 0 4 L 8 4 L 4 0 Z"
                            Style="{StaticResource ScrollBarLineButton}" />
                    <Track Name="PART_Track"
                    Grid.Row="1"
                    IsDirectionReversed="true">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButton}" />
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb Margin="1,0,1,0"
                            Background="{StaticResource ScrollBarThumbBackgroundBrush}"
                            Style="{StaticResource ScrollBarThumb}" />
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButton}" />
                        </Track.IncreaseRepeatButton>
                    </Track>
                    <RepeatButton Name="PART_RepBtn2"
                            Grid.Row="2"
                            Height="18"
                            Command="ScrollBar.LineDownCommand"
                            Content="M 0 0 L 4 4 L 8 0 Z"
                            Style="{StaticResource ScrollBarLineButton}" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter TargetName="PART_RepBtn1" Property="Background" Value="{StaticResource ScrollBarThumbBackgroundBrush}" />
                        <Setter TargetName="PART_RepBtn2" Property="Background" Value="{StaticResource ScrollBarThumbBackgroundBrush}" />
                        <Setter TargetName="PART_RepBtn1" Property="BorderBrush" Value="{StaticResource ScrollBarThumbBorderBrush}" />
                        <Setter TargetName="PART_RepBtn2" Property="BorderBrush" Value="{StaticResource ScrollBarThumbBorderBrush}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!--  HorizontalScrollBar Template using the previously created Templates  -->
            <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MaxWidth="18" />
                        <ColumnDefinition Width="0.00001*" />
                        <ColumnDefinition MaxWidth="18" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.ColumnSpan="3"
                    Background="{StaticResource ScrollBarBackgroundBrush}"
                    BorderBrush="{StaticResource ScrollBarBorderHBrush}"
                    BorderThickness="1"
                    CornerRadius="1" />
                    <RepeatButton Name="PART_RepBtn1"
                            Grid.Column="0"
                            Width="18"
                            Command="ScrollBar.LineLeftCommand"
                            Content="M 4 0 L 4 8 L 0 4 Z"
                            Style="{StaticResource ScrollBarLineButton}" />
                    <Track Name="PART_Track"
                    Grid.Column="1"
                    IsDirectionReversed="False">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageLeftCommand" Style="{StaticResource ScrollBarPageButton}" />
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb Margin="0,1,0,1"
                            Background="{StaticResource ScrollBarThumbBackgroundHBrush}"
                            Style="{StaticResource ScrollBarThumb}" />
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageRightCommand" Style="{StaticResource ScrollBarPageButton}" />
                        </Track.IncreaseRepeatButton>
                    </Track>
                    <RepeatButton Name="PART_RepBtn2"
                            Grid.Column="2"
                            Width="18"
                            Command="ScrollBar.LineRightCommand"
                            Content="M 0 0 L 4 4 L 0 8 Z"
                            Style="{StaticResource ScrollBarLineButton}" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter TargetName="PART_RepBtn1" Property="Background" Value="{StaticResource ScrollBarThumbBackgroundHBrush}" />
                        <Setter TargetName="PART_RepBtn2" Property="Background" Value="{StaticResource ScrollBarThumbBackgroundHBrush}" />
                        <Setter TargetName="PART_RepBtn1" Property="BorderBrush" Value="{StaticResource ScrollBarThumbBorderBrush}" />
                        <Setter TargetName="PART_RepBtn2" Property="BorderBrush" Value="{StaticResource ScrollBarThumbBorderBrush}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!--  Style for overall  ScrollBar  -->
            <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Width" Value="Auto" />
                        <Setter Property="Height" Value="18" />
                        <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                    </Trigger>
                    <Trigger Property="Orientation" Value="Vertical">
                        <Setter Property="Width" Value="18" />
                        <Setter Property="Height" Value="Auto" />
                        <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--  TABS  -->
            <Style TargetType="{x:Type TabControl}">
                <Style.Resources>
                    <LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Offset="0.0" Color="#FF404040" />
                                <GradientStop Offset="0.5" Color="#FF383838" />
                                <GradientStop Offset="1.0" Color="#FF303030" />
                            </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>

                    <LinearGradientBrush x:Key="HighlightBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Offset="0.0" Color="#FF3F3F3F" />
                                <GradientStop Offset="0.67" Color="#FF424242" />
                                <GradientStop Offset="1.0" Color="#FF454545" />
                            </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>

                    <LinearGradientBrush x:Key="BorderBrush" StartPoint="0,0" EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Offset="0" Color="#FF555555" />
                                <GradientStop Offset="1" Color="#FF444444" />
                            </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>

                    <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Offset="0.0" Color="#FF4C4C4C" />
                                <GradientStop Offset="0.5" Color="#FF444444" />
                                <GradientStop Offset="1.0" Color="#FF3C3C3C" />
                            </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>

                    <Style TargetType="{x:Type TabItem}">
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="Padding" Value="8,3" />
                        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                    <Grid>
                                        <Border Name="HeaderBorder"
                                        Margin="0,0,1,0"
                                        Background="{StaticResource BackgroundBrush}"
                                        BorderBrush="{StaticResource BorderBrush}"
                                        BorderThickness="0"
                                        Padding="{TemplateBinding Padding}">
                                            <ContentPresenter Name="HeaderContent"
                                                        Margin="0,0,0,1"
                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                        ContentSource="Header"
                                                        RecognizesAccessKey="True"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Border>
                                    </Grid>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="HeaderBorder" Property="Background" Value="{StaticResource HighlightBackgroundBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter TargetName="HeaderBorder" Property="Background" Value="{StaticResource PressedBorderBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Style.Resources>

                <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabControl">
                            <Border BorderBrush="#FF444444" BorderThickness="1">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <Border Background="#FF2C2C2C" BorderBrush="{StaticResource BorderBrush}" BorderThickness="0,0,0,1">
                                        <TabPanel IsItemsHost="True" />
                                    </Border>

                                    <ContentPresenter Grid.Row="1" Margin="0" ContentSource="SelectedContent" />
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  COMBO BOX  -->

            <Style BasedOn="{StaticResource KamillaStyle}" TargetType="ComboBox">
                <Style.Resources>
                    <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
                        <GradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Offset="0.0" Color="#FFF" />
                                <GradientStop Offset="1.0" Color="#CCC" />
                            </GradientStopCollection>
                        </GradientBrush.GradientStops>
                    </LinearGradientBrush>
                    <LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0">
                        <GradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Offset="0.0" Color="#FFF" />
                                <GradientStop Offset="1.0" Color="#CCC" />
                            </GradientStopCollection>
                        </GradientBrush.GradientStops>
                    </LinearGradientBrush>
                    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FF222222" />
                    <SolidColorBrush x:Key="GlyphBrush" Color="#FF17AD1A" />
                    <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
                        <GradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Offset="0.0" Color="#CCC" />
                                <GradientStop Offset="1.0" Color="#444" />
                            </GradientStopCollection>
                        </GradientBrush.GradientStops>
                    </LinearGradientBrush>
                    <LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0">
                        <GradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Offset="0.0" Color="#CCC" />
                                <GradientStop Offset="1.0" Color="#444" />
                            </GradientStopCollection>
                        </GradientBrush.GradientStops>
                    </LinearGradientBrush>
                    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />
                    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
                    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
                    <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
                        <GradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Offset="0.0" Color="#FFF" />
                                <GradientStop Offset="1.0" Color="#AAA" />
                            </GradientStopCollection>
                        </GradientBrush.GradientStops>
                    </LinearGradientBrush>

                    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
                        <Border x:Name="Border"
                        Background="{TemplateBinding BorderBrush}"
                        BorderBrush="{StaticResource BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0">
                            <Path x:Name="Arrow" Margin="0,0,6,0" HorizontalAlignment="Right" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Fill="{StaticResource GlyphBrush}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource HighlightBackgroundBrush}" />
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBorderBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
                        <Border Background="Transparent" Focusable="False">
                            <ScrollViewer x:Name="PART_ContentHost" Cursor="IBeam" />
                        </Border>
                    </ControlTemplate>
                </Style.Resources>

                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Border Name="Border" BorderBrush="{StaticResource BorderBrush}" BorderThickness="1" CornerRadius="1">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="20" />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton Name="ToggleButton"
                                            Grid.ColumnSpan="2"
                                            BorderBrush="{StaticResource BackgroundBrush}"
                                            BorderThickness="0"
                                            ClickMode="Press"
                                            Focusable="false"
                                            IsChecked="{Binding Path=IsDropDownOpen,
                                                                Mode=TwoWay,
                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                            Template="{StaticResource ComboBoxToggleButton}" />
                                    <ContentPresenter Name="ContentSite"
                                                Margin="2,1,1,1"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Stretch"
                                                Content="{TemplateBinding SelectionBoxItem}"
                                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                IsHitTestVisible="False" />
                                    <TextBox x:Name="PART_EditableTextBox"
                                        VerticalContentAlignment="Center"
                                        Focusable="True"
                                        IsReadOnly="{TemplateBinding IsReadOnly}"
                                        Template="{StaticResource ComboBoxTextBox}"
                                        Visibility="Hidden" />
                                    <Popup Name="Popup"
                                    AllowsTransparency="True"
                                    Focusable="False"
                                    IsOpen="{TemplateBinding IsDropDownOpen}"
                                    Placement="Bottom"
                                    PopupAnimation="Slide">
                                        <Grid Name="DropDown"
                                        MinWidth="{TemplateBinding ActualWidth}"
                                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                        SnapsToDevicePixels="True">
                                            <Border x:Name="DropDownBorder"
                                            Background="{StaticResource WindowBackgroundBrush}"
                                            BorderBrush="{StaticResource BorderBrush}"
                                            BorderThickness="1" />
                                            <ScrollViewer Margin="2,4,2,3" SnapsToDevicePixels="True">
                                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                            </ScrollViewer>
                                        </Grid>
                                    </Popup>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                                <Trigger Property="IsGrouping" Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                                </Trigger>
                                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                    <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="2" />
                                    <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                                </Trigger>
                                <Trigger Property="IsEditable" Value="true">
                                    <Setter TargetName="ToggleButton" Property="BorderBrush" Value="Transparent" />
                                    <Setter TargetName="ToggleButton" Property="Grid.Column" Value="1" />
                                    <Setter TargetName="ToggleButton" Property="Grid.ColumnSpan" Value="1" />
                                    <Setter Property="IsTabStop" Value="false" />
                                    <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEditable" Value="true" />
                                        <Condition SourceName="Border" Property="IsMouseOver" Value="true" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ToggleButton" Property="BorderBrush" Value="{StaticResource BackgroundBrush}" />
                                    <Setter TargetName="ToggleButton" Property="BorderThickness" Value="1,0,0,0" />
                                </MultiTrigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource GlyphBrush}" />
                                </Trigger>
                                <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource GlyphBrush}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BorderBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers />
            </Style>

            <!--  GROUP BOX  -->
            <Style BasedOn="{StaticResource KamillaStyle}" TargetType="{x:Type GroupBox}">
                <Setter Property="Background" Value="{StaticResource {x:Static SystemColors.WindowBrushKey}}" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GroupBox}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Border Grid.RowSpan="2" Margin="0,8,0,0" Background="{TemplateBinding Background}" BorderBrush="{StaticResource BorderBrush}" BorderThickness="1" CornerRadius="2,2,2,2" />
                                <Border Margin="6,0" HorizontalAlignment="Left" Background="{TemplateBinding Background}" Padding="3,0">
                                    <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" />
                                </Border>
                                <ContentPresenter Grid.Row="1" Margin="6,1" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style BasedOn="{StaticResource KamillaStyle}" TargetType="{x:Type CheckBox}">
                <Setter Property="SnapsToDevicePixels"   Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Foreground"            Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <BulletDecorator Background="Transparent">
                                <BulletDecorator.Bullet>
                                    <Border x:Name="Border" Width="13" Height="13" Background="{StaticResource BackgroundBrush}" BorderBrush="{StaticResource BorderBrush}" BorderThickness="1" CornerRadius="0">
                                        <Grid>
                                            <Path x:Name="CheckMark"       Width="7" Height="7" Data="M 0 0 L 7 7 M 0 7 L 7 0" SnapsToDevicePixels="False" Stroke="{TemplateBinding Foreground}" StrokeThickness="2" Visibility="Collapsed" />
                                            <Path x:Name="InderminateMark" Width="7" Height="7" Data="M 0 7 L 7 0"             SnapsToDevicePixels="False" Stroke="{TemplateBinding Foreground}" StrokeThickness="2" Visibility="Collapsed" />
                                        </Grid>
                                    </Border>
                                </BulletDecorator.Bullet>

                                <ContentPresenter Margin="4,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" RecognizesAccessKey="True" />
                            </BulletDecorator>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource HighlightBackgroundBrush}" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter TargetName="InderminateMark" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style BasedOn="{StaticResource KamillaStyle}" TargetType="{x:Type RadioButton}">
                <Setter Property="SnapsToDevicePixels"   Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Foreground"            Value="{StaticResource {x:Static SystemColors.WindowTextBrushKey}}" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <BulletDecorator Background="Transparent">
                                <BulletDecorator.Bullet>
                                    <Grid Width="13" Height="13">
                                        <Ellipse x:Name="Border"    Fill="{StaticResource BackgroundBrush}" Stroke="{StaticResource BorderBrush}" StrokeThickness="1" />
                                        <Ellipse x:Name="CheckMark" Fill="{TemplateBinding Foreground}" Margin="3" />
                                    </Grid>
                                </BulletDecorator.Bullet>
                                <ContentPresenter Margin="4,-1,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" RecognizesAccessKey="True" />
                            </BulletDecorator>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="false">
                                    <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Border" Property="Fill" Value="{StaticResource HighlightBackgroundBrush}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="Border" Property="Fill" Value="{StaticResource PressedBorderBrush}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="true">
                                    <Setter TargetName="Border" Property="Stroke" Value="{StaticResource {x:Static SystemColors.WindowTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style BasedOn="{StaticResource KamillaStyle}" TargetType="{x:Type Button}">
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="Border" Background="{StaticResource BackgroundBrush}" BorderBrush="{StaticResource BorderBrush}" BorderThickness="1" CornerRadius="1">
                                <ContentPresenter x:Name="ContentSite" HorizontalAlignment="Center" VerticalAlignment="Center"
                                            ContentSource="{TemplateBinding Content}" IsHitTestVisible="False" RecognizesAccessKey="True" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="true">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource HighlightBackgroundBrush}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBorderBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="StatusBar">
                <Style.Resources>
                    <LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Offset="0.0" Color="#FF404040" />
                                <GradientStop Offset="0.5" Color="#FF383838" />
                                <GradientStop Offset="1.0" Color="#FF303030" />
                            </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>

                    <LinearGradientBrush x:Key="BorderBrush" StartPoint="0,0" EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Offset="0" Color="#FF555555" />
                                <GradientStop Offset="1" Color="#FF444444" />
                            </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Style.Resources>

                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type StatusBar}">
                            <Border Background="{StaticResource BackgroundBrush}" BorderBrush="{StaticResource BorderBrush}" BorderThickness="0">
                                <ItemsPresenter />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <LinearGradientBrush x:Key="ToolBarHorizontalBackground" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Offset="0.0" Color="#FF585858" />
                <GradientStop Offset="0.5" Color="#FF505050" />
                <GradientStop Offset="1.0" Color="#FF484848" />
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="ToolBarToggleButtonVerticalBackground" StartPoint="0,0" EndPoint="1,0">
                <GradientStop Offset="0.0" Color="#FF585858" />
                <GradientStop Offset="0.5" Color="#FF505050" />
                <GradientStop Offset="1.0" Color="#FF484848" />
            </LinearGradientBrush>

            <SolidColorBrush x:Key="ToolBarButtonHover" Color="#FF324238" />
            <SolidColorBrush x:Key="ToolBarGripper"     Color="#FF3C123C" />

            <Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Background" Value="{StaticResource ToolBarToggleButtonVerticalBackground}" />
                <Setter Property="MinHeight" Value="0" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="0,0,3,3" SnapsToDevicePixels="true">
                                <Canvas Width="7" Height="6" Margin="2,7,2,2" HorizontalAlignment="Right" VerticalAlignment="Bottom" SnapsToDevicePixels="true">
                                    <Path Data="M 1.5 1 L 1.5 6" Stroke="White" />
                                    <Path Data="M 0.5 0 L 0.5 5" Stroke="{TemplateBinding Foreground}" />
                                    <Path Data="M 3.5  0.5 L 7 3.5 L 4 6.5 Z" Fill="White" />
                                    <Path Data="M 3.0 -0.5 L 6 2.5 L 3 5.5 Z" Fill="{TemplateBinding Foreground}" />
                                </Canvas>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Bd" Property="Background" Value="{StaticResource ToolBarButtonHover}" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter TargetName="Bd" Property="Background" Value="{StaticResource ToolBarButtonHover}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource ToolBarGripper}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <LinearGradientBrush x:Key="ToolBarVerticalBackground" StartPoint="0,0" EndPoint="1,0">
                <GradientStop Offset="0.0" Color="#FF3E3E3E" />
                <GradientStop Offset="0.5" Color="#FF424242" />
                <GradientStop Offset="1.0" Color="#FF3A3939" />
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="ToolBarToggleButtonHorizontalBackground" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Offset="0.0" Color="#FF3E3E3E" />
                <GradientStop Offset="0.5" Color="#FF424242" />
                <GradientStop Offset="1.0" Color="#FF3A3939" />
            </LinearGradientBrush>

            <Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Background" Value="{StaticResource ToolBarToggleButtonHorizontalBackground}" />
                <Setter Property="MinHeight" Value="0" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="0,3,3,0" SnapsToDevicePixels="true">
                                <Canvas Width="6" Height="7" Margin="7,2,2,2" HorizontalAlignment="Right" VerticalAlignment="Bottom" SnapsToDevicePixels="true">
                                    <Path Data="M 1 1.5 L 6 1.5" Stroke="White" />
                                    <Path Data="M 0 0.5 L 5 0.5" Stroke="{TemplateBinding Foreground}" />
                                    <Path Data="M 0.5 4 L 6.5 4 L 3.5 7 Z" Fill="White" />
                                    <Path Data="M -0.5 3 L 5.5 3 L 2.5 6 Z" Fill="{TemplateBinding Foreground}" />
                                </Canvas>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Bd" Property="Background" Value="{StaticResource ToolBarButtonHover}" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter TargetName="Bd" Property="Background" Value="{StaticResource ToolBarButtonHover}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource ToolBarGripper}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <!--    -->
            <SolidColorBrush x:Key="ToolBarMenuBorder"        Color="#FF254937" />
            <SolidColorBrush x:Key="ToolBarSubMenuBackground" Color="#FF4F5551" />

            <Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Background="Transparent" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                <Rectangle>
                                    <Rectangle.Fill>
                                        <DrawingBrush TileMode="Tile" Viewbox="0,0,4,4" ViewboxUnits="Absolute" Viewport="0,0,4,4" ViewportUnits="Absolute">
                                            <DrawingBrush.Drawing>
                                                <DrawingGroup>
                                                    <GeometryDrawing Brush="White" Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z" />
                                                    <GeometryDrawing Brush="{StaticResource ToolBarGripper}" Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z" />
                                                </DrawingGroup>
                                            </DrawingBrush.Drawing>
                                        </DrawingBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Cursor" Value="SizeAll" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ToolBarMainPanelBorderStyle" TargetType="{x:Type Border}">
                <Setter Property="Margin"       Value="0,0,11,0" />
                <Setter Property="CornerRadius" Value="3,3,3,3" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                        <Setter Property="CornerRadius" Value="0,0,0,0" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type ToolBar}">
                <Setter Property="Background" Value="{StaticResource ToolBarHorizontalBackground}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToolBar}">
                            <Grid x:Name="Grid" Margin="3,1,1,1" SnapsToDevicePixels="true">
                                <Grid x:Name="OverflowGrid" HorizontalAlignment="Right">
                                    <ToggleButton x:Name="OverflowButton" Height="37" VerticalAlignment="Top" ClickMode="Press" FocusVisualStyle="{x:Null}"
                                            IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            IsEnabled="{TemplateBinding HasOverflowItems}" Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}" />
                                    <Popup x:Name="OverflowPopup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                    Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" StaysOpen="false">
                                        <Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                                            <Border x:Name="ToolBarSubMenuBorder"
                                            Background="{StaticResource ToolBarSubMenuBackground}"
                                            BorderBrush="{StaticResource ToolBarMenuBorder}"
                                            BorderThickness="1"
                                            RenderOptions.ClearTypeHint="Enabled">
                                                <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
                                                                Margin="2"
                                                                FocusVisualStyle="{x:Null}"
                                                                Focusable="true"
                                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                KeyboardNavigation.TabNavigation="Cycle"
                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                WrapWidth="200" />
                                            </Border>
                                        </Themes:SystemDropShadowChrome>
                                    </Popup>
                                </Grid>
                                <Border x:Name="MainPanelBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                Style="{StaticResource ToolBarMainPanelBorderStyle}">
                                    <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                                        <Thumb x:Name="ToolBarThumb" Width="10" Margin="-3,-1,0,0" Padding="6,5,1,6" Style="{StaticResource ToolBarThumbStyle}" />
                                        <ContentPresenter x:Name="ToolBarHeader" Margin="4,0,4,0" HorizontalAlignment="Center" VerticalAlignment="Center" ContentSource="Header" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        <ToolBarPanel x:Name="PART_ToolBarPanel" Margin="0,1,2,2" IsItemsHost="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </DockPanel>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsOverflowOpen" Value="true">
                                    <Setter TargetName="ToolBarThumb" Property="IsEnabled" Value="false" />
                                </Trigger>
                                <Trigger Property="Header" Value="{x:Null}">
                                    <Setter TargetName="ToolBarHeader" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="ToolBarTray.IsLocked" Value="true">
                                    <Setter TargetName="ToolBarThumb" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger SourceName="OverflowPopup" Property="HasDropShadow" Value="true">
                                    <Setter TargetName="Shdw" Property="Margin"                 Value="0,0,5,5" />
                                    <Setter TargetName="Shdw" Property="SnapsToDevicePixels"    Value="true" />
                                    <Setter TargetName="Shdw" Property="Color"                  Value="#71000000" />
                                </Trigger>
                                <Trigger Property="Orientation" Value="Vertical">
                                    <Setter TargetName="Grid" Property="Margin" Value="1,3,1,1" />
                                    <Setter TargetName="OverflowButton"     Property="Style"                Value="{StaticResource ToolBarVerticalOverflowButtonStyle}" />
                                    <Setter TargetName="ToolBarThumb"       Property="Height"               Value="10" />
                                    <Setter TargetName="ToolBarThumb"       Property="Width"                Value="Auto" />
                                    <Setter TargetName="ToolBarThumb"       Property="Margin"               Value="-1,-3,0,0" />
                                    <Setter TargetName="ToolBarThumb"       Property="Padding"              Value="5,6,6,1" />
                                    <Setter TargetName="ToolBarHeader"      Property="Margin"               Value="0,0,0,4" />
                                    <Setter TargetName="PART_ToolBarPanel"  Property="Margin"               Value="1,0,2,2" />
                                    <Setter TargetName="ToolBarThumb"       Property="DockPanel.Dock"       Value="Top" />
                                    <Setter TargetName="ToolBarHeader"      Property="DockPanel.Dock"       Value="Top" />
                                    <Setter TargetName="OverflowGrid"       Property="HorizontalAlignment"  Value="Stretch" />
                                    <Setter TargetName="OverflowGrid"       Property="VerticalAlignment"    Value="Bottom" />
                                    <Setter TargetName="OverflowPopup"      Property="Placement"            Value="Right" />
                                    <Setter TargetName="MainPanelBorder"    Property="Margin"               Value="0,0,0,11" />

                                    <Setter Property="Background" Value="{StaticResource ToolBarVerticalBackground}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>

</ResourceDictionary>